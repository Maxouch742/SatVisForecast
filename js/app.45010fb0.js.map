{"version":3,"file":"js/app.45010fb0.js","mappings":"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","sources":["webpack://openlayers-vue-tuto/./src/App.vue","webpack://openlayers-vue-tuto/./src/App.vue?7ccd","webpack://openlayers-vue-tuto/./src/components/AboutItem.vue","webpack://openlayers-vue-tuto/./src/components/AboutItem.vue?e283","webpack://openlayers-vue-tuto/./src/components/Home.vue","webpack://openlayers-vue-tuto/./src/components/TitleHeader.vue","webpack://openlayers-vue-tuto/./src/components/TitleHeader.vue?5f40","webpack://openlayers-vue-tuto/./src/components/MapContainer.vue","webpack://openlayers-vue-tuto/./src/stores/coordinatesStore.js","webpack://openlayers-vue-tuto/./src/stores/mapStore.js","webpack://openlayers-vue-tuto/./src/components/MapContainer.vue?c531","webpack://openlayers-vue-tuto/./src/components/SkyPlot.vue","webpack://openlayers-vue-tuto/./src/stores/skyplotStore.js","webpack://openlayers-vue-tuto/./src/components/SkyPlot.vue?cebe","webpack://openlayers-vue-tuto/./src/components/FormInput.vue","webpack://openlayers-vue-tuto/./src/modules-sat/constants.js","webpack://openlayers-vue-tuto/./src/modules-sat/api.js","webpack://openlayers-vue-tuto/./src/modules-sat/time.js","webpack://openlayers-vue-tuto/./src/modules-sat/convertJSON.js","webpack://openlayers-vue-tuto/./src/modules-sat/constellation.js","webpack://openlayers-vue-tuto/./src/modules-sat/compute.js","webpack://openlayers-vue-tuto/./src/modules-topography/constants.js","webpack://openlayers-vue-tuto/./src/modules-topography/api.js","webpack://openlayers-vue-tuto/./src/modules-topography/compute.js","webpack://openlayers-vue-tuto/./src/components/FormInput.vue?924a","webpack://openlayers-vue-tuto/./src/components/Home.vue?08c6","webpack://openlayers-vue-tuto/./src/main.js","webpack://openlayers-vue-tuto/webpack/bootstrap","webpack://openlayers-vue-tuto/webpack/runtime/chunk loaded","webpack://openlayers-vue-tuto/webpack/runtime/compat get default export","webpack://openlayers-vue-tuto/webpack/runtime/define property getters","webpack://openlayers-vue-tuto/webpack/runtime/global","webpack://openlayers-vue-tuto/webpack/runtime/hasOwnProperty shorthand","webpack://openlayers-vue-tuto/webpack/runtime/publicPath","webpack://openlayers-vue-tuto/webpack/runtime/jsonp chunk loading","webpack://openlayers-vue-tuto/webpack/startup"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <RouterView />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'App'\r\n  }\r\n</script>\r\n\r\n","import { render } from \"./App.vue?vue&type=template&id=4b283a5a\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"aboutBox\">\r\n    <RouterLink to=\"/home\">Go back to home</RouterLink>\r\n    <h1 class=\"aboutTitle\">About this project</h1>\r\n\r\n    <p>This application prototype was created as part of the \"MDT - GIO 2024\" course. The aim of the web-app is to get\r\n      the potential GNSS\r\n      visibility according to local terrain.\r\n    </p>\r\n\r\n    <div class=\"para\">\r\n      <p>SatVisForecast was developped by a team of 3 people:</p>\r\n      <li>Franck Schmidt</li>\r\n      <li>Maxime Fourquaux</li>\r\n      <li>Matteo Casto</li>\r\n    </div>\r\n\r\n    <p class=\"para\">\r\n      Here's the link to the GitHub project :\r\n      <a href=\"https://github.com/Maxouch742/SatVisForecast\" target=\"_blank\">link</a>\r\n    </p>\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'AboutItem'\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.aboutTitle {\r\n  font-weight: bold;\r\n  font-size: large;\r\n  margin-top: 20px\r\n}\r\n\r\n.aboutBox {\r\n  width: 400vw;\r\n}\r\n\r\n.para {\r\n  margin-top: 10px;\r\n}\r\n</style>","import { render } from \"./AboutItem.vue?vue&type=template&id=2dc959ae&scoped=true\"\nimport script from \"./AboutItem.vue?vue&type=script&lang=js\"\nexport * from \"./AboutItem.vue?vue&type=script&lang=js\"\n\nimport \"./AboutItem.vue?vue&type=style&index=0&id=2dc959ae&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2dc959ae\"]])\n\nexport default __exports__","<template>\r\n  <div id=\"app\">\r\n    <div class=\"cell cell-header\">\r\n      <TitleHeader />\r\n      <RouterLink to=\"/about\">About</RouterLink>\r\n    </div>\r\n    <div class=\"cell cell-skyplot\">\r\n      <SkyPlot />\r\n    </div>\r\n    <div class=\"cell cell-form\">\r\n      <FormInput />\r\n    </div>\r\n    <div class=\"cell cell-map\">\r\n      <MapContainer />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TitleHeader from './TitleHeader.vue';\r\nimport MapContainer from './MapContainer.vue'\r\nimport SkyPlot from './SkyPlot.vue';\r\nimport FormInput from './FormInput.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    TitleHeader,\r\n    MapContainer,\r\n    SkyPlot,\r\n    FormInput\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n}\r\n\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: 30vw 70vw;\r\n  /* 3/4 à gauche, 1/4 à droite */\r\n  grid-template-rows: 20vh 70vh;\r\n  /* Les rangées s'adaptent au contenu */\r\n  grid-gap: 0.5vw;\r\n  padding: 0.5vw;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.cell {\r\n  border-radius: 4px;\r\n  background-color: white;\r\n}\r\n\r\n.center {\r\n  margin: auto\r\n}\r\n\r\n.cell-header {\r\n  grid-column-start: 1;\r\n  grid-column-end: 3;\r\n  grid-row-start: 1;\r\n  grid-row-end: 1;\r\n}\r\n\r\n.cell-map {\r\n  grid-column: 1;\r\n  grid-row: 2;\r\n  height: auto;\r\n}\r\n\r\n.cell-skyplot {\r\n\r\n  grid-column: 2;\r\n  grid-row: 2;\r\n  max-width: 67vw;\r\n}\r\n\r\n.cell-form {\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n  max-width: 67vw;\r\n  padding-right: 6px\r\n}\r\n</style>","<template>\r\n  <div>\r\n    <img src=\"@/assets/logo_big_satvisforecast.svg\" alt=\"Logo\" class=\"logo vertical-center\">\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n\r\n\r\n.logo {\r\n    width: auto; /* Adjust the width as needed */\r\n    max-height: 100px; /* Maintain aspect ratio */\r\n}\r\n.vertical-center {\r\n  margin: 0;\r\n  position: relative;\r\n  top: 42vh;\r\n  -ms-transform: translateY(-40vh);\r\n  transform: translateY(-40vh);\r\n}\r\n\r\n</style>\r\n","import { render } from \"./TitleHeader.vue?vue&type=template&id=c7a17156\"\nconst script = {}\n\nimport \"./TitleHeader.vue?vue&type=style&index=0&id=c7a17156&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div ref=\"map-root\" style=\"width: 100%; height: 100%\"></div>\r\n</template>\r\n<script>\r\n\r\n  // Let everyone in !\r\n  import 'ol/ol.css';\r\n  import Map from 'ol/Map';\r\n  import View from 'ol/View';\r\n  import TileLayer from 'ol/layer/Tile';\r\n  import TileWMS from 'ol/source/TileWMS';\r\n  import Overlay from 'ol/Overlay';\r\n  import VectorLayer from 'ol/layer/Vector';\r\n  import VectorSource from 'ol/source/Vector';\r\n  import LineString from 'ol/geom/LineString';\r\n  import Feature from 'ol/Feature';\r\n  import { Style, Stroke } from 'ol/style';\r\n  import proj4 from 'proj4';\r\n  import { register } from 'ol/proj/proj4';\r\n  import { get } from 'ol/proj';\r\n  import { useCoordinatesStore } from '@/stores/coordinatesStore';\r\n  import { useMapStore } from '@/stores/mapStore.js';\r\n\r\n  // define CH projection (for MN95)\r\n  proj4.defs(\"EPSG:2056\", \"+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=2600000 +y_0=1200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs\");\r\n  register(proj4);\r\n\r\n  // define WMTS of swiss national map from swisstopo\r\n  const nationalMap = new TileLayer({\r\n    source: new TileWMS({\r\n      url: 'https://wms.geo.admin.ch/',\r\n      projection: 'EPSG:2056',\r\n      params: {\r\n        layers: \"ch.swisstopo.pixelkarte-farbe\"\r\n      },\r\n      attributions: [\"&copy; <a href=\\\"https://www.geo.admin.ch/fr/home.html\\\">WMTS national map / geo.admin.ch</a>\"]\r\n    }),\r\n    opacity: 0.6,\r\n    properties: {\r\n      isBaseLayer: true,  // not to delete it\r\n    }\r\n  });\r\n\r\n  export default {\r\n    name: 'MapContainer',\r\n    props: {\r\n      reliefList: Object\r\n    },\r\n    data() {\r\n      return {\r\n        locationOverlay: null, // Store the location overlay\r\n        map: null\r\n      };\r\n    },\r\n\r\n\r\n    mounted() {\r\n\r\n      // init map\r\n      this.map = new Map({\r\n        target: this.$refs['map-root'],\r\n        layers: [nationalMap],\r\n        view: new View({\r\n          center: [2600000, 1200000], // Default center of map\r\n          zoom: 9, \r\n          projection: get('EPSG:2056')\r\n        }),\r\n      });\r\n      this.addPoint([2600000, 1200000]);\r\n\r\n\r\n      // Handle map click event\r\n      this.map.on('singleclick', (evt) => {\r\n\r\n        // get coordinates of click (MN95)\r\n        const coordinates = evt.coordinate;\r\n\r\n        // update coordinates from store (round to 0.1m)\r\n        const coordinatesStore = useCoordinatesStore();\r\n        coordinatesStore.updateCoordinates(Math.round(coordinates[0] * 10) / 10, Math.round(coordinates[1] * 10) / 10);\r\n\r\n        // Remove the existing overlay if it exists\r\n        if (this.locationOverlay) {\r\n          this.map.removeOverlay(this.locationOverlay);\r\n        }\r\n\r\n        this.addPoint(coordinates);\r\n      });\r\n\r\n      // init global storage of map (to interact from other containers)\r\n      const mapStore = useMapStore();\r\n      mapStore.setMap(this.map);\r\n      mapStore.setAddLineLayerMethod(this.addLineLayer);\r\n      mapStore.setClearMapLayers(this.clearMapLayers);\r\n\r\n\r\n\r\n    }, // end mounted\r\n\r\n    \r\n    methods: {\r\n\r\n      addPoint(coordinates){\r\n        // URL of the SVG icon\r\n        const iconUrl = require(\"../assets/antenna.png\")\r\n\r\n        // Create a marker element\r\n        const element = document.createElement('img');\r\n        element.src = iconUrl;\r\n        element.style.width = '50px'; // Set as needed\r\n        element.style.height = '50px'; // Set as needed\r\n\r\n        // Create and add the new overlay\r\n        this.locationOverlay = new Overlay({\r\n          element: element,\r\n          position: coordinates,\r\n          positioning: 'bottom-center',\r\n          offset: [0, 7] // Adjust the offset to point the right tip-mouse-spot\r\n        });\r\n        this.map.addOverlay(this.locationOverlay);\r\n      },\r\n\r\n      addLineLayer(coordinates) {\r\n        // Add a simple line layer to the map (here, for the local topography mask)\r\n        const lineLayer = new VectorLayer({\r\n          source: new VectorSource({\r\n            features: [\r\n              new Feature({\r\n                geometry: new LineString(coordinates)\r\n              })\r\n            ]\r\n          }),\r\n          style: new Style({\r\n            stroke: new Stroke({\r\n              color: '#3F3F3F', // grey !\r\n              width: 5 // put on some width\r\n            })\r\n          })\r\n        });\r\n        this.map.addLayer(lineLayer);\r\n      },\r\n\r\n      clearMapLayers() {\r\n        // Parse all layers and delete them from the map except the base layer\r\n        const layersToRemove = this.map.getLayers().getArray()\r\n                                      .filter(layer => !layer.get('isBaseLayer')); // not the national map\r\n        // deleting\r\n        layersToRemove.forEach(layer => {\r\n          this.map.removeLayer(layer);\r\n        });\r\n      }\r\n\r\n    }, // end methods\r\n\r\n\r\n\r\n  } // end export default\r\n\r\n\r\n</script>\r\n\r\n","// store/coordinatesStore.js\r\nimport { defineStore } from 'pinia';\r\n\r\n// handle global event of click on the map \r\nexport const useCoordinatesStore = defineStore('coordinates', {\r\n  state: () => ({\r\n    easting: 2600000.0,\r\n    northing: 1200000.0\r\n  }),\r\n  actions: {\r\n    // triggered when map is clicked\r\n    updateCoordinates(easting, northing) { \r\n      this.easting = easting;\r\n      this.northing = northing;\r\n    }\r\n  }\r\n});","// store/mapStore.js\r\nimport { defineStore } from 'pinia';\r\nimport { boundingExtent, buffer } from 'ol/extent';\r\nimport { View } from 'ol';\r\n\r\n// handle things to do with the map ! \r\nexport const useMapStore = defineStore('map', {\r\n  state: () => ({\r\n    map: null,\r\n    addLineLayer: null, \r\n  }),\r\n  actions: {\r\n\r\n    // init the map\r\n    setMap(mapInstance) {\r\n      this.map = mapInstance;\r\n    },\r\n\r\n    // adding the methods (to get them accessible from everywhere)\r\n    setAddLineLayerMethod(method) {\r\n      this.addLineLayer = method;\r\n    },\r\n    setClearMapLayers(clearLayersFunction) {\r\n      this.clearMapLayers = clearLayersFunction;\r\n    },\r\n\r\n    // set the invoking methods (to really DO the things)\r\n    invokeAddLineLayer(coordinates) {\r\n      if (this.addLineLayer) {\r\n        this.addLineLayer(coordinates);\r\n      } else {\r\n        console.error('addLineLayer method is not set.');\r\n      }\r\n    },\r\n\r\n    invokeClearMapLayers() {\r\n      if (this.addLineLayer) {\r\n        this.clearMapLayers();\r\n      } else {\r\n        console.error('clearMapLayers method is not set.');\r\n      }\r\n    },\r\n\r\n    invokeZoomExtend(coordinates) {\r\n      const extentProject = boundingExtent(coordinates);\r\n      const bufferProject = buffer(extentProject, 75);\r\n      this.map.setView(new View({\r\n        extent: bufferProject\r\n      }))\r\n    },\r\n  }\r\n});","import { render } from \"./MapContainer.vue?vue&type=template&id=422a49c2\"\nimport script from \"./MapContainer.vue?vue&type=script&lang=js\"\nexport * from \"./MapContainer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div>\r\n      <div id=\"skyplot-container\" class=\"skyplot-cont\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import Highcharts from 'highcharts';\r\n  require('highcharts/modules/exporting')(Highcharts);\r\n  require('highcharts/highcharts-more')(Highcharts);\r\n  import { useSkyPlotStore } from '@/stores/skyplotStore';\r\n  \r\n  export default {\r\n    name: 'SkyPlot',\r\n    mounted() {\r\n\r\n      // init and store the chart\r\n      const skyPlotStore = useSkyPlotStore();\r\n      skyPlotStore.initializeChart('skyplot-container');\r\n    },\r\n  \r\n\r\n\r\n  }\r\n  </script>\r\n\r\n\r\n<style>\r\n.skyplot-cont{\r\n  height: 70vh;\r\n}\r\n\r\n</style>\r\n  ","// stores/skyPlotStore.js\r\nimport { defineStore } from 'pinia';\r\nimport Highcharts from 'highcharts';\r\n\r\n// variable to get the same colors for each constellation\r\nconst colorsSats = {\r\n    'GPS': '#1f77b4',  // bleu\r\n    'GLONASS': '#ff7f0e',  // orange\r\n    'BEIDOU': '#2ca02c',  // vert\r\n    'GALILEO': '#d62728',  // rouge\r\n    'IRNSS': '#9467bd',  // violet\r\n    'QZSS': '#8c564b',  // brun\r\n  };\r\n\r\n\r\n\r\nexport const useSkyPlotStore = defineStore('skyPlotStore', {\r\n  state: () => ({\r\n    chart: null, // Pour stocker l'instance du graphique\r\n  }),\r\n  actions: {\r\n    initializeChart(containerId) {\r\n      this.chart = Highcharts.chart(containerId, {\r\n        chart: {\r\n          polar: true,\r\n          //type: 'scatter'\r\n          marginTop: 100\r\n        },\r\n        title: {\r\n          text: 'Skyplot'\r\n        },\r\n        pane: {\r\n          startAngle: 0,\r\n          endAngle: 360\r\n        },\r\n        xAxis: {\r\n          tickInterval: 45,\r\n          min: 0,\r\n          max: 360,\r\n          labels: {\r\n            formatter: function () {\r\n              return this.value + '°';\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          min: 0,\r\n          max: 90,\r\n          tickInterval: 15,\r\n          reversed: true,\r\n          title: {\r\n            text: 'Elevation'\r\n          },\r\n          labels: {\r\n            formatter: function () {\r\n              return this.value + '°';\r\n            }\r\n          }\r\n        },\r\n        series: [ // fake legends for init\r\n        { \r\n          name: 'Satellites',\r\n          type: 'scatter',\r\n          data: []\r\n        },\r\n        {\r\n          name: 'Elevation mask', \r\n          type: 'line',\r\n          data: [],\r\n          color: 'red',\r\n          lineWidth: 1,\r\n          dashStyle: 'dash',\r\n          marker: {\r\n            enabled: false\r\n          }\r\n        },\r\n        {\r\n          name: 'Topography mask',\r\n          type: 'area',\r\n          data: [],\r\n          color: 'gray',\r\n          fillColor: 'rgba(128, 128, 128, 0.3)', // gray transparent\r\n          lineWidth: 1,\r\n          marker: {\r\n            enabled: false\r\n            }\r\n        }],\r\n        legend: {\r\n          align: 'right',\r\n          verticalAlign: 'center',\r\n          layout: 'vertical',\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n          followPointer: true,\r\n        },\r\n      });\r\n    },\r\n\r\n    removeAllSeries() {\r\n        if (this.chart) {\r\n            while (this.chart.series.length > 0) {\r\n                this.chart.series[0].remove(true);\r\n            }\r\n        }\r\n    },\r\n\r\n    drawReliefOnSkyPlot(listAziElevOfRelief) {\r\n\r\n      if (this.chart) {\r\n        this.chart.addSeries({\r\n          name: 'Topography mask',\r\n          type: 'area',\r\n          data: listAziElevOfRelief,\r\n          color: 'gray',\r\n          fillColor: 'rgba(128, 128, 128, 0.3)', // Gris transparent\r\n          lineWidth: 1,\r\n          marker: {\r\n            enabled: false\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    drawMaskElevetionOnSkyPlot(angle) {\r\n\r\n      // Create data\r\n      const data = []\r\n      for (let i=0; i<360; i++){\r\n        data.push([i, angle])\r\n      }\r\n\r\n      // Add data\r\n      if (this.chart) {\r\n        this.chart.addSeries({\r\n          name: 'Elevation mask',\r\n          type: 'line',\r\n          data: data,\r\n          color: 'red',\r\n          lineWidth: 1,\r\n          dashStyle: 'dash',\r\n          marker: {\r\n            enabled: false\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    drawSatsOnSykPlot_traj(dataSatJSON, constellation_user) {\r\n      const data_constellation = {}\r\n\r\n      // Create object general with list for position's satellite\r\n      dataSatJSON.forEach(element => {\r\n\r\n        const data = element.data;\r\n        data.forEach( sat => {\r\n\r\n          const constellation = sat.constellation;\r\n\r\n          if ( (constellation in data_constellation) === false){\r\n            \r\n            // Add constellation, satellite and position\r\n            data_constellation[constellation] = {};\r\n            data_constellation[constellation][sat.name] = [ [sat.azimut, sat.elevation] ];\r\n\r\n          } else {\r\n\r\n            const const_data = data_constellation[constellation];\r\n\r\n            if ( (sat.name in const_data) === false){\r\n              // add satellite and position\r\n              const_data[sat.name] = [[sat.azimut, sat.elevation]];\r\n            }\r\n            else {\r\n              // Add position\r\n              const_data[sat.name].push( [sat.azimut, sat.elevation] );\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n      // Display trajectory satellite\r\n      for (const constel in data_constellation){\r\n        if (constel === constellation_user){\r\n        \r\n          for (const sat in data_constellation[constel]){\r\n\r\n            // Add data inversed for plot curve trajectory\r\n            let data = data_constellation[constel][sat];\r\n            const data_inv = [];\r\n            for (let i=data.length-1; i >= 0; i--){\r\n              data_inv.push(data[i])\r\n            }\r\n            data = data.concat(data_inv);\r\n            data_constellation[constel][sat] = data;\r\n\r\n            if (this.chart) {\r\n              this.chart.addSeries({\r\n                name: sat,\r\n                type: 'line',\r\n                data: data_constellation[constel][sat],\r\n                lineWidth: 1,\r\n                marker: {\r\n                  enabled: false\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    drawSatsOnSykPlot(dataSatJSON, constellation_user) {\r\n        const seriesData = dataSatJSON.reduce((acc, sat) => {\r\n            if (!acc[sat.constellation]) {\r\n                acc[sat.constellation] = [];\r\n            }\r\n            acc[sat.constellation].push([sat.azimut, sat.elevation]);\r\n            return acc;\r\n        }, {});\r\n\r\n        // Supposons que `this.chart` est votre instance Highcharts\r\n        for (const constellation in seriesData) {\r\n          if (constellation === constellation_user || constellation_user === \"ALL\"){\r\n              if (this.chart) {\r\n                this.chart.addSeries({\r\n                  name: constellation,\r\n                  type: 'scatter',\r\n                  color: colorsSats[constellation],\r\n                  data: seriesData[constellation],\r\n                  marker: {\r\n                    symbol: 'circle'\r\n                  }\r\n                });\r\n              }\r\n          }\r\n        }\r\n    },\r\n  }\r\n});\r\n","import { render } from \"./SkyPlot.vue?vue&type=template&id=0eba16b1\"\nimport script from \"./SkyPlot.vue?vue&type=script&lang=js\"\nexport * from \"./SkyPlot.vue?vue&type=script&lang=js\"\n\nimport \"./SkyPlot.vue?vue&type=style&index=0&id=0eba16b1&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"container grey-container\">\r\n    <div class=\"columns is-multiline\">\r\n      <!-- Use is-one-fifth to make 5 elements fit in one row -->\r\n      <div class=\"column is-one-fifth\">\r\n        <div class=\"field\">\r\n          <label class=\"label\">Easting [m]</label>\r\n          <div class=\"control\">\r\n            <input class=\"input\" id=\"easting\" v-model=\"easting\" type=\"number\" placeholder=\"Easting\" readonly>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"column is-one-fifth\">\r\n        <div class=\"field\">\r\n          <label class=\"label\">Northing [m]</label>\r\n          <div class=\"control\">\r\n            <input class=\"input\" id=\"northing\" v-model=\"northing\" type=\"number\" placeholder=\"Northing\" readonly>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"column is-one-fifth\">\r\n        <div class=\"field\">\r\n          <label class=\"label\">Instrument height [m]</label>\r\n          <div class=\"control\">\r\n            <input class=\"input\" id=\"instrumentHeight\" v-model=\"instrumentHeight\" type=\"number\" step=\"0.1\"\r\n              placeholder=\"Instrument height [m]\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"column is-one-fifth\">\r\n        <div class=\"field\">\r\n          <label class=\"label\">Elevation mask [°]</label>\r\n          <div class=\"control\">\r\n            <input class=\"input\" id=\"elevationMask\" v-model=\"elevationMask\" type=\"number\" step=\"0.1\"\r\n              placeholder=\"Elevation mask [°]\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"column is-one-fifth\">\r\n        <div class=\"field\">\r\n          <label class=\"label\">Date/Time</label>\r\n          <div class=\"control\">\r\n            <input class=\"input\" id=\"datetime\" v-model=\"datetime\" type=\"datetime-local\" placeholder=\"Date/Time\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Ensure button takes full width to move to the next line -->\r\n      <div class=\"column is-full\">\r\n        <div class=\"field\">\r\n          <div class=\"control\">\r\n            <button class=\"button is-link is-fullwidth\" @click=\"getGNSSvisibility\">Get GNSS visibility</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Radiobutton for (sky)plot constellation -->\r\n      <div class=\"column is-full\">\r\n        <div class=\"field\">\r\n          <div class=\"control\">\r\n            <label class=\"radio\">\r\n              <input type=\"radio\" name=\"constellation\" value=\"ALL\" @click=\"addConstellation\" checked />\r\n              ALL\r\n            </label>\r\n            <label class=\"radio\">\r\n              <input type=\"radio\" name=\"constellation\" value=\"GPS\" @click=\"addConstellation\" />\r\n              GPS\r\n            </label>\r\n            <label class=\"radio\">\r\n              <input type=\"radio\" name=\"constellation\" value=\"GLONASS\" @click=\"addConstellation\" />\r\n              GLONASS\r\n            </label>\r\n            <label class=\"radio\">\r\n              <input type=\"radio\" name=\"constellation\" value=\"GALILEO\" @click=\"addConstellation\" />\r\n              GALILEO\r\n            </label>\r\n            <label class=\"radio\">\r\n              <input type=\"radio\" name=\"constellation\" value=\"BEIDOU\" @click=\"addConstellation\" />\r\n              BEIDOU\r\n            </label>\r\n            <label class=\"radio\">\r\n              <input type=\"radio\" name=\"constellation\" value=\"IRNSS\" @click=\"addConstellation\" />\r\n              IRNSS\r\n            </label>\r\n            <label class=\"radio\">\r\n              <input type=\"radio\" name=\"constellation\" value=\"QZSS\" @click=\"addConstellation\" />\r\n              QZSS\r\n            </label>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport { computed } from 'vue';\r\nimport { useCoordinatesStore } from '@/stores/coordinatesStore';\r\nimport { useMapStore } from '@/stores/mapStore';\r\nimport { useSkyPlotStore } from '@/stores/skyplotStore';\r\nimport { TleSatellite, nf02ToBessel, mn95ToWgs84 } from '@/modules-sat/api.js';\r\nimport { compute_satellite } from '@/modules-sat/compute.js';\r\nimport { request_profile } from '@/modules-topography/api.js';\r\nimport { calcElevation, maxElevation, point_launched } from '@/modules-topography/compute.js';\r\n\r\nexport default {\r\n  name: 'FormInput',\r\n\r\n  // fields easting and northing are dynamically defined with global event and storage coordinatesStore\r\n  setup() {\r\n    const coordinatesStore = useCoordinatesStore();\r\n    const easting = computed(() => coordinatesStore.easting);\r\n    const northing = computed(() => coordinatesStore.northing);\r\n    return {\r\n      easting,\r\n      northing\r\n    };\r\n  },\r\n\r\n  // defaut data\r\n  data() {\r\n    const now = new Date(); // Get the current date and time\r\n    const utc1Time = new Date(now.getTime() + (60 * 60 * 1000)); // Add 1 hour for UTC+1\r\n    return {\r\n      datetime: utc1Time.toISOString().slice(0, 16), // Sets datetime to the current date and time in UTC+1\r\n      instrumentHeight: 1.70,\r\n      elevationMask: 5.0,\r\n      response: null,\r\n      responseDataMask: null,\r\n      responseDataSatellite: null,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n\r\n    async fetchHeight() {\r\n\r\n      // method to fetch simple altitude from CH geo admin API\r\n      const url = `https://api3.geo.admin.ch/rest/services/height?easting=${this.easting}&northing=${this.northing}`;\r\n      try {\r\n        const result = await fetch(url);\r\n        if (!result.ok) {\r\n          throw new Error('Erreur lors de la récupération des données');\r\n        }\r\n        const data = await result.json();\r\n        this.response = data\r\n        // get the height from response\r\n        this.height = this.response['height']\r\n      } catch (error) {\r\n        this.response = error.message;\r\n      }\r\n\r\n    },\r\n\r\n    async responseToListEastNorth(data) {\r\n      // Create list for return\r\n      const response = [];\r\n\r\n      // Browse data for get easting and northing\r\n      data.forEach(element => {\r\n        const point = [element.easting, element.northing];\r\n        response.push(point);\r\n      })\r\n      response.push([data[0].easting, data[1].northing]);\r\n\r\n      return response;\r\n    },\r\n\r\n    async responseToListsAziElev(dataStringAziElev) {\r\n\r\n      // Create list for return response\r\n      const response = [];\r\n\r\n      // Browse data for get azimut and elevation\r\n      dataStringAziElev.forEach(element => {\r\n        let azimut = element.phi;\r\n        const point = [azimut, element.elevation];\r\n        response.push(point);\r\n      })\r\n      return response;\r\n    },\r\n\r\n    async getSatelittes(JSONrequest) {\r\n      try {\r\n\r\n        // Download TLE Message\r\n        const tle_message = await TleSatellite('json');\r\n\r\n        // Recover user-recorded date and time\r\n        const date = new Date(JSONrequest.datetime);\r\n\r\n        // Get receiver's position\r\n        const obs_position = {\r\n          \"east\": JSONrequest.E,\r\n          \"north\": JSONrequest.N,\r\n          \"height_NF02\": JSONrequest.H\r\n        };\r\n\r\n        //TODO: vérifier la conversion des données de MN95/NF02 vers WGS84\r\n\r\n        // Compute position WGS84 from MN95 position\r\n        const height_bessel = await nf02ToBessel(obs_position.east, obs_position.north, obs_position.height_NF02);\r\n\r\n        // Add element to observator Object\r\n        obs_position.height_bessel = parseFloat(height_bessel.altitude);\r\n\r\n        // MN95/Bessel to WGS84:\r\n        const wgs84 = await mn95ToWgs84(obs_position.east, obs_position.north, obs_position.height_bessel);\r\n\r\n        // Add element to observator Object\r\n        obs_position.latitude = parseFloat(wgs84.easting);\r\n        obs_position.longitude = parseFloat(wgs84.northing);\r\n        obs_position.height = parseFloat(wgs84.altitude);\r\n\r\n        // Create return response\r\n        const response_result = [];\r\n\r\n        // Range date on 6 hours\r\n        for (let i = 0; i < 6; i++) {\r\n\r\n          // Create new date\r\n          //const newDate = date.setHours(date.getMinutes() + (i*30));\r\n          const newDate = new Date(date.getTime() + (i * 60 * 60 * 1000)); // Ajouter une heure\r\n\r\n          // Compute position's SV\r\n          const res = compute_satellite(obs_position, newDate, tle_message);\r\n\r\n          const temp = {}\r\n          temp.date = newDate;\r\n          temp.data = res;\r\n          response_result.push(temp);\r\n\r\n        }\r\n        //console.log(\"Data with hours\", response_result)\r\n\r\n\r\n        // Compute position's SV\r\n        //const res = compute_satellite(obs_position, date, tle_message);\r\n        return response_result;\r\n\r\n      } catch (error) {\r\n        console.log(\"ERROR\", error);\r\n        throw error; // Rethrow the error so that it can be caught by the caller\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Request mask topography\r\n     * \r\n     * @param {Object} JSONrequest \r\n     */\r\n    async getTopography(JSONrequest) {\r\n\r\n      try {\r\n\r\n        // Reforme in object\r\n        const coord_start = [JSONrequest.E, JSONrequest.N];\r\n        const height_instrument = JSONrequest.instrumentHeight;\r\n\r\n        const tabpromise = [];\r\n\r\n        // Iteration, on angles from 0 to 359\r\n        for (let i = 0; i < 360; i++) {\r\n          const coord_end = point_launched(coord_start, i);\r\n          const profile = request_profile(coord_start, coord_end);\r\n          tabpromise.push(profile);\r\n        }\r\n\r\n        // Calculate elevation as soon as all requests have been passed.\r\n        return Promise.all(tabpromise).then(results => {\r\n          const data = calcElevation(results, coord_start, height_instrument);\r\n          const mask = maxElevation(data);\r\n          return mask;\r\n        });\r\n\r\n      } catch (error) {\r\n        console.log(\"ERROR\", error);\r\n        throw error; // Rethrow the error so that it can be caught by the caller\r\n      }\r\n    },\r\n\r\n    async getGNSSvisibility() {\r\n\r\n      // MAIN PROCESS CLIENT-SIDE (WHEN 'GET' IS CLICKED)\r\n      // ************************************************\r\n\r\n\r\n      // =====================================\r\n      // === GET HEIGHT FROM GEO.ADMIN API ===\r\n      // =====================================\r\n      // calling fetch method simple altitude from CH geo admin API\r\n      await this.fetchHeight();\r\n\r\n\r\n      // ==================================\r\n      // === GET USER'S INPUT FORM DATA ===\r\n      // ==================================\r\n      // formatting JSON object according to form user's inputs\r\n      const JSONrequest = {\r\n        'E': this.easting,\r\n        'N': this.northing,\r\n        'H': parseFloat(this.height),\r\n        'instrumentHeight': this.instrumentHeight,\r\n        'elevationMask': this.elevationMask,\r\n        'datetime': this.datetime\r\n      };\r\n\r\n      // ==============================\r\n      // === DRAW THE POLAR SKYPLOT ===\r\n      // ==============================\r\n\r\n      // TOPOGRAPHY MASK\r\n      // ---------------\r\n      const dataTopoMask = await this.getTopography(JSONrequest);\r\n      this.responseDataMask = dataTopoMask;\r\n      console.log(dataTopoMask);\r\n\r\n      // SATELITTE SCATTER \r\n      // -----------------\r\n      const dataSatellite = await this.getSatelittes(JSONrequest);\r\n      this.responseDataSatellite = dataSatellite;\r\n      const dataSatellite_last = dataSatellite.slice(-1);\r\n\r\n\r\n      // PLOT ELEMENTS ON POLAR CHARTS\r\n      // -----------------------------\r\n      const listAziElevOfRelief = await this.responseToListsAziElev(dataTopoMask);\r\n      const skyPlotStore = useSkyPlotStore(); // get the stored chart first\r\n      skyPlotStore.removeAllSeries(); // delete existing data first\r\n      skyPlotStore.drawSatsOnSykPlot(dataSatellite_last[0].data, \"ALL\");\r\n      //skyPlotStore.drawSatsOnSykPlot_traj(dataSatellite, constellation_user);\r\n      skyPlotStore.drawReliefOnSkyPlot(listAziElevOfRelief);\r\n      skyPlotStore.drawMaskElevetionOnSkyPlot(this.elevationMask);\r\n\r\n\r\n\r\n      // ==============================\r\n      // === DRAW RELIEF ON THE MAP ===\r\n      // ==============================\r\n      const listENofRelief = await this.responseToListEastNorth(dataTopoMask);\r\n      // get the stored map (gloabl)\r\n      const mapStore = useMapStore();\r\n      // delete layer on the map (not the background)\r\n      mapStore.invokeClearMapLayers();\r\n      // drawing line on 2D-map\r\n      mapStore.invokeAddLineLayer(listENofRelief);\r\n    },\r\n\r\n    async addConstellation() {\r\n\r\n      if (this.responseDataMask === null && this.responseDataSatellite === null) {\r\n        alert(\"first click on 'Get GNSS visibility'\");\r\n\r\n        // Set radiobutton 'all'\r\n        const input = document.getElementsByName('constellation');\r\n        for (let i = 0; i < input.length; i++) {\r\n          if (input[i].value == \"ALL\") {\r\n            input[i].checked = true\r\n          } else {\r\n            input[i].checked = false\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        //Get radioButton checked\r\n        const input = document.getElementsByName('constellation');\r\n        let constel = 0;\r\n        for (let i = 0; i < input.length; i++) {\r\n          if (input[i].checked) {\r\n            constel = input[i].value;\r\n          }\r\n        }\r\n\r\n        // Modify skyplot\r\n        const listAziElevOfRelief = await this.responseToListsAziElev(this.responseDataMask);\r\n        const skyPlotStore = useSkyPlotStore(); // get the stored chart first\r\n        skyPlotStore.removeAllSeries(); // delete existing data first\r\n        skyPlotStore.drawSatsOnSykPlot(this.responseDataSatellite.slice(-1)[0].data, constel);\r\n        skyPlotStore.drawSatsOnSykPlot_traj(this.responseDataSatellite, constel);\r\n        skyPlotStore.drawReliefOnSkyPlot(listAziElevOfRelief);\r\n        skyPlotStore.drawMaskElevetionOnSkyPlot(this.elevationMask);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.grey-container {\r\n  padding: 20px;\r\n  background-color: lightgrey;\r\n  border-radius: 10px;\r\n}\r\n\r\n.label:not(:last-child) {\r\n  margin-bottom: 0.0em !important;\r\n}\r\n\r\n.column {\r\n  display: block;\r\n  flex-basis: 0;\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n  padding: 0.3rem !important;\r\n}\r\n</style>\r\n","/**\r\n * ---------------------------------------------------------------------\r\n * \r\n * This module exports string constants used throughout the application.\r\n * It helps to minimize the risk of type by preventing string repetition.\r\n * \r\n * ---------------------------------------------------------------------\r\n */\r\n\r\nexport const GEODESY_API = \"https://geodesy.geo.admin.ch/reframe\";\r\nexport const GEOADMIN_API = \"https://api3.geo.admin.ch/rest/services\";\r\nexport const CELESTRAK_API = \"https://celestrak.org/NORAD/elements\";\r\nexport const HTTP_METHODS = {\r\n    GET: 'GET',\r\n    POST: 'POST'\r\n};\r\n","/**\r\n * ---------------------------------------------------------------------\r\n * \r\n * This module is responsible of making HTTP call to the API endpoints.\r\n * \r\n * ---------------------------------------------------------------------\r\n */\r\n\r\nimport {\r\n    GEODESY_API, \r\n    GEOADMIN_API,\r\n    HTTP_METHODS,\r\n    CELESTRAK_API\r\n} from './constants.js'\r\n\r\n/**\r\n * Convert swiss position (LV95) to international position (WGS84, GRS80)\r\n * Source: Geodetic REST Web services (REFRAME Web API), swisstopo, Report 16-03, 2016\r\n * \r\n * @param {Number} east     East coordinate in meters [m] in LV95\r\n * @param {Number} north    North coordinate in meters [m] in LV95\r\n * @param {Number} altitude optionnal, Ellipsoidal height in meters [m] on Bessel\r\n * @returns\r\n */\r\nexport async function mn95ToWgs84(east, north, altitude=1000.0){\r\n    const response = await fetch(`${GEODESY_API}/lv95towgs84?easting=${east}&northing=${north}&altitude=${altitude}&format=json`, {\r\n        method: HTTP_METHODS.GET\r\n    });\r\n    const result = await response.json();\r\n    return result\r\n}\r\n\r\n\r\n/**\r\n * Convert Swiss usual heights LN02 (leveling network) into ellipsoidal heights (on Bessel 1841).\r\n * Source: Geodetic REST Web services (REFRAME Web API), swisstopo, Report 16-03, 2016\r\n * \r\n * @param {Number} east     East coordinate in meters [m] in LV95\r\n * @param {Number} north    North coordinate in meters [m] in LV95\r\n * @param {Number} altitude optionnal, Usual height in meters [m] in LN02\r\n * @returns \r\n */\r\nexport async function nf02ToBessel(east, north, altitude=1000.0){\r\n    const response = await fetch(`${GEODESY_API}/ln02tobessel?easting=${east}&northing=${north}&altitude=${altitude}&format=json`, {\r\n        method: HTTP_METHODS.GET\r\n    });\r\n    const result = await response.json();\r\n    return result\r\n}\r\n\r\n\r\n/**\r\n * Obtain usual height in meters in LN02 with planimetric coordinates (east, north in LV95)\r\n * Source: https://api3.geo.admin.ch/services/sdiservices.html#height\r\n * \r\n * @param {Number} east  East coordinate in meters [m] in LV95\r\n * @param {Number} north North coordinate in meters [m] in LV95\r\n * @returns \r\n */\r\nexport async function getHeightInNf02(east, north){\r\n    const response = await fetch(`${GEOADMIN_API}/height?easting=${east}&northing=${north}`, {\r\n        method: HTTP_METHODS.GET\r\n    });\r\n    const result = await response.json()\r\n    return result\r\n}\r\n\r\n\r\n/**\r\n * Download satellite orbit definitions once only  \r\n * \r\n * @param {*} group \r\n * @param {*} format \r\n * @returns \r\n */\r\nexport async function TleSatellite(format='tle',group='GNSS') {\r\n    const response = await fetch(`${CELESTRAK_API}/gp.php?GROUP=${group}&FORMAT=${format}`, {\r\n        method: HTTP_METHODS.GET\r\n    });\r\n    const result = await response.json();\r\n    return result\r\n}","/**\r\n * ---------------------------------------------------------------------\r\n * \r\n * This module is responsible for time calculation operations.\r\n * \r\n * ---------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Compute the number of day in year\r\n * \r\n * @param {String} date \r\n * @returns \r\n */\r\nexport function day_of_year(date){\r\n\r\n    const date_obj = new Date(date);\r\n\r\n    // Create day 1 of the year\r\n    const date_start = new Date(date_obj.getFullYear(), 0, 0);\r\n    \r\n    const diff = date_obj - date_start;\r\n    const day_one = 1000 * 60 * 60 * 24;\r\n    const day_of_year = Math.floor(diff / day_one);\r\n\r\n    return day_of_year\r\n}\r\n\r\n/**\r\n * Compute fractionnal part of a day\r\n * \r\n * @param {String} date \r\n * @returns \r\n */\r\nexport function day_fract_part(date){\r\n\r\n    const date_obj = new Date(date);\r\n    const hours = date_obj.getHours();\r\n    const minutes = date_obj.getMinutes();\r\n    const secondes = date_obj.getSeconds();\r\n    const millisecondes = date_obj.getMilliseconds();\r\n    let day_fractionnal = (hours * 3600 + minutes * 60 + secondes + millisecondes / 1000) / 86400;\r\n\r\n    day_fractionnal = parseFloat(day_fractionnal.toFixed(8));\r\n    \r\n    return day_fractionnal\r\n}","/**\r\n * ---------------------------------------------------------------------\r\n *\r\n * This module is responsible for converting JSON into text messages\r\n * for use with the 'satellite-position.js'\r\n *\r\n * ---------------------------------------------------------------------\r\n */\r\n\r\nimport { day_of_year, day_fract_part } from './time.js'\r\n\r\n/**\r\n * Creating String message for satellite-position.js\r\n *\r\n * @param {JSON} orbit\r\n * @returns\r\n */\r\nexport function convertJSON (orbit) {\r\n  // Create message and first line\r\n  let tle_message = '1'\r\n\r\n  const satellite_number = orbit.NORAD_CAT_ID\r\n  const classification = orbit.CLASSIFICATION_TYPE\r\n  tle_message += ` ${satellite_number}${classification}`\r\n\r\n  const int_des_1part = orbit.OBJECT_ID.split('-')[0].slice(-2)\r\n  const int_des_2part = orbit.OBJECT_ID.split('-')[1].slice(0, 3)\r\n  const int_des_3part = orbit.OBJECT_ID.split('-')[1].slice(3)\r\n  tle_message += ` ${int_des_1part.padEnd(\r\n    2\r\n  )}${int_des_2part}${int_des_3part.padEnd(3, ' ')}`\r\n\r\n  const epoch_year = new Date(orbit.EPOCH).getFullYear()\r\n  const epoch_day = day_of_year(orbit.EPOCH) + day_fract_part(orbit.EPOCH)\r\n  const epoch = (epoch_year - 2000) * 1000 + epoch_day\r\n  tle_message += ` ${String(epoch).padStart(14, '0')}`\r\n\r\n  const mm_dot = orbit.MEAN_MOTION_DOT\r\n  let mm_dot_sign = '-'\r\n  if (mm_dot >= 0.0) {\r\n    mm_dot_sign = ' '\r\n  }\r\n  const numb = mm_dot * Math.sign(mm_dot)\r\n  tle_message += ` ${mm_dot_sign}.${numb.toFixed(8).slice(-8)}`\r\n\r\n  const mm_ddot = ' 00000+0'\r\n  tle_message += ` ${mm_ddot}`\r\n\r\n  const bstar = ' 00000+0'\r\n  tle_message += ` ${bstar}`\r\n\r\n  const ephemeris = orbit.EPHEMERIS_TYPE\r\n  tle_message += ` ${ephemeris}`\r\n\r\n  const element = orbit.ELEMENT_SET_NO\r\n  tle_message += `  ${element}`\r\n\r\n  const checksum = '3'\r\n  tle_message += `${checksum}`\r\n\r\n  // Second line\r\n  tle_message += '\\n'\r\n  tle_message += `2 ${satellite_number}`\r\n\r\n  const incli = orbit.INCLINATION\r\n  const incli_int = Math.floor(incli)\r\n  const incli_flo = (incli - incli_int).toFixed(4)\r\n  tle_message += ` ${String(incli_int).padStart(3, ' ')}.${incli_flo.slice(-4)}`\r\n\r\n  const ra = orbit.RA_OF_ASC_NODE\r\n  const ra_int = Math.floor(ra)\r\n  const ra_flo = (ra - ra_int).toFixed(4)\r\n  tle_message += ` ${String(ra_int).padStart(3, ' ')}.${ra_flo.slice(-4)}`\r\n\r\n  const ecc = orbit.ECCENTRICITY.toFixed(7)\r\n  tle_message += ` ${String(ecc).slice(-7)}`\r\n\r\n  const arg_perigee = orbit.ARG_OF_PERICENTER\r\n  const arg_perigee_int = Math.floor(arg_perigee)\r\n  const arg_perigee_flo = (arg_perigee - arg_perigee_int).toFixed(4)\r\n  tle_message += ` ${String(arg_perigee_int).padStart(\r\n    3,\r\n    ' '\r\n  )}.${arg_perigee_flo.slice(-4)}`\r\n\r\n  const m_anomaly = orbit.MEAN_ANOMALY\r\n  const m_anomaly_int = Math.floor(m_anomaly)\r\n  const m_anomaly_flo = (m_anomaly - m_anomaly_int).toFixed(4)\r\n  tle_message += ` ${String(m_anomaly_int).padStart(\r\n    3,\r\n    ' '\r\n  )}.${m_anomaly_flo.slice(-4)}`\r\n\r\n  const mm = orbit.MEAN_MOTION\r\n  const mm_int = Math.floor(mm)\r\n  const mm_flo = (mm - mm_int).toFixed(8)\r\n  tle_message += ` ${String(mm_int).padStart(2, ' ')}.${mm_flo.slice(-8)}`\r\n\r\n  const rev = orbit.REV_AT_EPOCH\r\n  tle_message += `${String(rev).padStart(5, ' ')}`\r\n\r\n  tle_message += `${checksum}`\r\n\r\n  return tle_message\r\n}\r\n","/**\r\n * Detecting satellite constellation\r\n *\r\n * @param {JSON} object_name\r\n * @returns\r\n */\r\nexport function constellation (object_name) {\r\n  let constellation_gnss = false\r\n\r\n  if (object_name.includes('NAVSTAR') || object_name.includes('GPS')) {\r\n    constellation_gnss = 'GPS'\r\n  } else if (object_name.includes('BEIDOU')) {\r\n    constellation_gnss = 'BEIDOU'\r\n  } else if (object_name.includes('GALILEO')) {\r\n    constellation_gnss = 'GALILEO'\r\n  } else if (object_name.includes('IRNSS')) {\r\n    constellation_gnss = 'IRNSS'\r\n  } else if (object_name.includes('QZS')) {\r\n    constellation_gnss = 'QZSS'\r\n  } else if (object_name.includes('COSMOS')) {\r\n    constellation_gnss = 'GLONASS'\r\n  }\r\n\r\n  return constellation_gnss\r\n}\r\n","import { convertJSON } from \"./convertJSON.js\";\r\nimport { constellation } from \"./constellation.js\"\r\nimport { propagate, eciToGeodetic, geodeticToEcf, ecfToLookAngles, gstime, twoline2satrec } from 'satellite.js'\r\n\r\n\r\n/**\r\n * Calculate satellite position (azimuth and elevation) relavite\r\n * to receiver position and user-selected time\r\n * \r\n * @param {Object} obs_position \r\n * @param {Date} date \r\n * @param {JSON} tle_message \r\n * @returns \r\n */\r\nexport function compute_satellite(obs_position, date, tle_message){\r\n\r\n    // Create array for return\r\n    const satellite_return = [];\r\n\r\n    tle_message.forEach((orbit) => {\r\n\r\n        // Convert JSON to text\r\n        const tle_orbit = convertJSON(orbit);\r\n\r\n        // Get constellation of satellite\r\n        const constella = constellation(orbit.OBJECT_NAME);\r\n        if ( constella !== false){\r\n\r\n            // Decode text message\r\n            const satrec = twoline2satrec(\r\n                tle_orbit.split('\\n')[0].trim(), \r\n                tle_orbit.split('\\n')[1].trim()\r\n            );\r\n\r\n            // Compute position and velocity\r\n            const positionAndVelocity = propagate(satrec, date);\r\n            const gmst = gstime(date);\r\n\r\n            if (positionAndVelocity.position !== undefined){\r\n            \r\n                // Compute and convert position\r\n                const position_geodetic = eciToGeodetic(positionAndVelocity.position, gmst);  // returns in radians\r\n                const position_ecf = geodeticToEcf(position_geodetic); // returns in cartesiens\r\n                const position_az_el = ecfToLookAngles(obs_position, position_ecf);  // angles in radians\r\n                const azi = position_az_el[\"azimuth\"] * 180.0 / Math.PI;\r\n                const ele = position_az_el[\"elevation\"] * 180.0 / Math.PI;\r\n\r\n                // Selecting visible satellites\r\n                if (ele > 0.0){\r\n\r\n                    // Create object and push to array\r\n                    const obj = {\r\n                        name: orbit.OBJECT_NAME,\r\n                        constellation: constella,\r\n                        id: orbit.OBJECT_ID,\r\n                        azimut: azi,\r\n                        elevation: ele,\r\n                        longitude: position_geodetic.longitude * 180.0 / Math.PI,\r\n                        latitude: position_geodetic.latitude * 180.0 / Math.PI,\r\n                        height: position_geodetic.height,\r\n                    }\r\n                    satellite_return.push(obj);\r\n\r\n                }\r\n            }\r\n        }\r\n    })\r\n    return satellite_return;\r\n}","/**\r\n * ---------------------------------------------------------------------\r\n * \r\n * This module exports string constants used throughout the application.\r\n * It helps to minimize the risk of type by preventing string repetition.\r\n * \r\n * ---------------------------------------------------------------------\r\n */\r\n\r\nexport const GEOADMIN_API = \"https://api3.geo.admin.ch/rest/services\";\r\nexport const NB_POINT = 1000;\r\nexport const MAX_DISTANCE = 8000; // in meters\r\nexport const DEG2RAD = Math.PI / 180.0;\r\nexport const RAD2DEG = 180.0 / Math.PI;","/**\r\n * ---------------------------------------------------------------------\r\n * \r\n * This module is responsible of making HTTP call to the API endpoints.\r\n * \r\n * ---------------------------------------------------------------------\r\n */\r\n\r\nimport {\r\n    GEOADMIN_API, \r\n    NB_POINT,\r\n} from './constants.js'\r\n\r\n\r\n/**\r\n * Request profile on api3.geo.admin\r\n * \r\n * @param {Array} coord_start \r\n * @param {Array} coord_end \r\n * @returns \r\n */\r\nexport function request_profile(coord_start, coord_end){\r\n\r\n    // Build address\r\n    const api_profil = `${GEOADMIN_API}/profile.json?nb_points=${NB_POINT}&geom={\"type\":\"LineString\",\"coordinates\":[[${coord_start[0].toFixed(4)},${coord_start[1].toFixed(4)}],[${coord_end[0].toFixed(4)},${coord_end[1].toFixed(4)}]]}`;\r\n\r\n    // Get request\r\n    let promise = fetch(api_profil)\r\n        .then(response => {\r\n            // Display error if response is not ok\r\n            if (!response.ok){\r\n                throw new Error(`Request's error: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n    return promise;\r\n}","/**\r\n * ---------------------------------------------------------------------\r\n * \r\n * This module is responsible of functions in computations.\r\n * \r\n * ---------------------------------------------------------------------\r\n */\r\n\r\nimport { DEG2RAD, MAX_DISTANCE, RAD2DEG } from \"./constants\";\r\n\r\n/**\r\n * Compute point launched with base coordinates and angle.\r\n * \r\n * @param {Array} coord_sta \r\n * @param {Number} angle \r\n * @returns {Array}\r\n */\r\nexport function point_launched(coord_sta, angle){\r\n\r\n    const point_easting = coord_sta[0] + Math.sin(angle * DEG2RAD) * MAX_DISTANCE;\r\n    const point_northing = coord_sta[1] + Math.cos(angle * DEG2RAD) * MAX_DISTANCE;\r\n\r\n    return [point_easting, point_northing];\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {*} observation \r\n * @param {*} coordinates \r\n * @returns \r\n */\r\nfunction gisement(observation, coordinates){\r\n    const delta_E = observation.easting - coordinates[0];\r\n    const delta_N = observation.northing - coordinates[1];\r\n    let phi = Math.atan2(delta_E, delta_N) * RAD2DEG;\r\n    if (phi < 0){ phi += 360.0 }\r\n    return phi;\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {*} observation \r\n * @param {*} dh \r\n * @returns \r\n */\r\nfunction elevation(observation, dh){\r\n    const elev = Math.atan(dh / observation.dist) * RAD2DEG;\r\n    return elev\r\n}\r\n\r\n\r\n/**\r\n * Compute elevation for each profile and each point in profile\r\n * \r\n * @param {Array} results \r\n * @param {Array} coord_base \r\n * @param {Number} height_instrument \r\n * @returns \r\n */\r\nexport function calcElevation(results, coord_base, height_instrument){\r\n\r\n    results.forEach(element => {\r\n\r\n        let firstIteration = true;\r\n\r\n        element.forEach((observation, i) => {\r\n\r\n            if (!firstIteration){\r\n                const dh = observation.alts.DTM25 - (element[0].alts.DTM25 + height_instrument);\r\n\r\n                if (dh >= 0){\r\n                    // Compute azimut and elevation\r\n                    const elev = elevation(observation, dh);\r\n                    const phi = gisement(observation, coord_base);\r\n                    \r\n                    // Push orientation and elevation in the profile\r\n                    element[i].elevation = elev;\r\n                    element[i].phi = phi;\r\n                \r\n                } else {\r\n\r\n                    // Compute azimut because elevation is 0\r\n                    const phi = gisement(observation, coord_base);\r\n                    \r\n                    // Push orientation and elevation at 0 in the profile\r\n                    element[i].elevation = 0.0;\r\n                    element[i].phi = phi;\r\n\r\n                }\r\n            }\r\n            else {\r\n                // Insert value for the first point in the profile\r\n                element[i].elevation = 0.0;\r\n                element[i].phi = 0.0;\r\n                firstIteration = false;\r\n            }\r\n        })\r\n    })\r\n    return results\r\n}\r\n\r\n/**\r\n * Find elevation max in profil\r\n * \r\n * @param {Array} data \r\n * @returns \r\n */\r\nexport function maxElevation(data){\r\n\r\n    const mask_elevation = [];\r\n    data.forEach(profile => {\r\n        \r\n        // Create list of elevation for a profile\r\n        const list_elevation = profile.map(obj => obj.elevation);\r\n\r\n        // Find the hight value of elevation in the list\r\n        const max_elevation = Math.max(...list_elevation);\r\n\r\n        let obser_max_elevation;\r\n     \r\n        if ( max_elevation === 0.0){\r\n\r\n            // Take a value in a profile just for the orientation\r\n            obser_max_elevation = profile[50];\r\n            \r\n        } else {\r\n            // Find the index of the place for the max elevation\r\n            const index_max_value = list_elevation.findIndex(value => value === max_elevation);\r\n\r\n            // Get Object in response array\r\n            obser_max_elevation = profile[index_max_value];\r\n\r\n        }\r\n        // Push the observation in the list\r\n        mask_elevation.push(obser_max_elevation);\r\n    });\r\n    return mask_elevation;\r\n}","import { render } from \"./FormInput.vue?vue&type=template&id=6b3fb604\"\nimport script from \"./FormInput.vue?vue&type=script&lang=js\"\nexport * from \"./FormInput.vue?vue&type=script&lang=js\"\n\nimport \"./FormInput.vue?vue&type=style&index=0&id=6b3fb604&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Home.vue?vue&type=template&id=6ea751f2\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=6ea751f2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport  'bulma/css/bulma.css'; // import bulma for easy CSS styling\r\nimport { createPinia } from 'pinia';\r\nimport { createWebHistory , createRouter } from 'vue-router'\r\nimport AboutItem from './components/AboutItem.vue'\r\nimport Home from './components/Home.vue'\r\n\r\n\r\nconst routes = [\r\n    {\r\n      path: '/',\r\n      component: Home\r\n    },\r\n    {\r\n      path: '/home', \r\n      name: 'Home',\r\n      component: Home\r\n    },\r\n    {\r\n      path: '/about', \r\n      name: 'About project',\r\n      component: AboutItem\r\n    },\r\n  ]\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes\r\n})\r\n\r\n// to handle global events such as click on map\r\nconst pinia = createPinia();\r\n\r\ncreateApp(App).use(pinia)\r\n              .use(router)\r\n              .mount('#app')\r\n              \r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/SatVisForecast/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkopenlayers_vue_tuto\"] = self[\"webpackChunkopenlayers_vue_tuto\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(5886); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_RouterView","name","__exports__","render","class","_createElementVNode","_createTextVNode","href","target","_component_RouterLink","to","default","_withCtx","_","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_component_TitleHeader","_component_SkyPlot","_component_FormInput","_component_MapContainer","src","_imports_0","alt","script","ref","style","useCoordinatesStore","defineStore","state","easting","northing","actions","updateCoordinates","this","useMapStore","map","addLineLayer","setMap","mapInstance","setAddLineLayerMethod","method","setClearMapLayers","clearLayersFunction","clearMapLayers","invokeAddLineLayer","coordinates","console","error","invokeClearMapLayers","invokeZoomExtend","extentProject","boundingExtent","bufferProject","buffer","setView","View","extent","proj4","defs","register","nationalMap","TileLayer","source","TileWMS","url","projection","params","layers","attributions","opacity","properties","isBaseLayer","props","reliefList","Object","data","locationOverlay","mounted","Map","$refs","view","center","zoom","get","addPoint","on","evt","coordinate","coordinatesStore","Math","round","removeOverlay","mapStore","methods","iconUrl","require","element","document","createElement","width","height","Overlay","position","positioning","offset","addOverlay","lineLayer","VectorLayer","VectorSource","features","Feature","geometry","LineString","Style","stroke","Stroke","color","addLayer","layersToRemove","getLayers","getArray","filter","layer","forEach","removeLayer","colorsSats","useSkyPlotStore","chart","initializeChart","containerId","Highcharts","polar","marginTop","title","text","pane","startAngle","endAngle","xAxis","tickInterval","min","max","labels","formatter","value","yAxis","reversed","series","type","lineWidth","dashStyle","marker","enabled","fillColor","legend","align","verticalAlign","layout","tooltip","followPointer","removeAllSeries","length","remove","drawReliefOnSkyPlot","listAziElevOfRelief","addSeries","drawMaskElevetionOnSkyPlot","angle","i","push","drawSatsOnSykPlot_traj","dataSatJSON","constellation_user","data_constellation","sat","constellation","azimut","elevation","const_data","constel","data_inv","concat","drawSatsOnSykPlot","seriesData","reduce","acc","symbol","skyPlotStore","_hoisted_6","_cache","$event","$setup","placeholder","readonly","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","$data","instrumentHeight","step","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","elevationMask","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","datetime","_hoisted_23","_hoisted_24","_hoisted_25","onClick","args","$options","getGNSSvisibility","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","addConstellation","checked","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","GEODESY_API","CELESTRAK_API","HTTP_METHODS","GET","POST","async","mn95ToWgs84","east","north","altitude","response","fetch","result","json","nf02ToBessel","TleSatellite","format","group","day_of_year","date","date_obj","Date","date_start","getFullYear","diff","day_one","floor","day_fract_part","hours","getHours","minutes","getMinutes","secondes","getSeconds","millisecondes","getMilliseconds","day_fractionnal","parseFloat","toFixed","convertJSON","orbit","tle_message","satellite_number","NORAD_CAT_ID","classification","CLASSIFICATION_TYPE","int_des_1part","OBJECT_ID","split","slice","int_des_2part","int_des_3part","padEnd","epoch_year","EPOCH","epoch_day","epoch","String","padStart","mm_dot","MEAN_MOTION_DOT","mm_dot_sign","numb","sign","mm_ddot","bstar","ephemeris","EPHEMERIS_TYPE","ELEMENT_SET_NO","checksum","incli","INCLINATION","incli_int","incli_flo","ra","RA_OF_ASC_NODE","ra_int","ra_flo","ecc","ECCENTRICITY","arg_perigee","ARG_OF_PERICENTER","arg_perigee_int","arg_perigee_flo","m_anomaly","MEAN_ANOMALY","m_anomaly_int","m_anomaly_flo","mm","MEAN_MOTION","mm_int","mm_flo","rev","REV_AT_EPOCH","object_name","constellation_gnss","includes","compute_satellite","obs_position","satellite_return","tle_orbit","constella","OBJECT_NAME","satrec","twoline2satrec","trim","positionAndVelocity","propagate","gmst","gstime","undefined","position_geodetic","eciToGeodetic","position_ecf","geodeticToEcf","position_az_el","ecfToLookAngles","azi","PI","ele","obj","longitude","latitude","GEOADMIN_API","NB_POINT","MAX_DISTANCE","DEG2RAD","RAD2DEG","request_profile","coord_start","coord_end","api_profil","promise","then","ok","Error","status","point_launched","coord_sta","point_easting","sin","point_northing","cos","gisement","observation","delta_E","delta_N","phi","atan2","dh","elev","atan","dist","calcElevation","results","coord_base","height_instrument","firstIteration","alts","DTM25","maxElevation","mask_elevation","profile","list_elevation","max_elevation","obser_max_elevation","index_max_value","findIndex","setup","computed","now","utc1Time","getTime","toISOString","responseDataMask","responseDataSatellite","fetchHeight","message","responseToListEastNorth","point","responseToListsAziElev","dataStringAziElev","getSatelittes","JSONrequest","E","N","H","height_bessel","height_NF02","wgs84","response_result","newDate","res","temp","log","getTopography","tabpromise","Promise","all","mask","dataTopoMask","dataSatellite","dataSatellite_last","listENofRelief","alert","input","getElementsByName","components","TitleHeader","MapContainer","SkyPlot","FormInput","routes","path","component","Home","AboutItem","router","createRouter","history","createWebHistory","pinia","createPinia","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}